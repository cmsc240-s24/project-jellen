#include <crow.h>
#include <map>
#include <csignal>
#include <string>
#include "Actor.h"
#include "Cart.h"
#include "Director.h"
#include "GenericAPI.h"
#include "Genre.h"
#include "JellenReview.h"
#include "Personnel.h"
#include "persistence.h"

using namespace std;
using namespace crow;

// Load resources from files.
map<std::string, Actor> actorsMap = loadFromFile<Actor>("actors.json");
map<std::string, Cart> cartsMap = loadFromFile<Cart>("carts.json");
map<std::string, Director> directorsMap = loadFromFile<Director>("directors.json");
map<std::string, Genre> genresMap = loadFromFile<Genre>("genres.json");
map<std::string, JellenReview> jellenReviewsMap = loadFromFile<JellenReview>("jellenreviews.json");
map<std::string, Personnel> personnelMap = loadFromFile<P>("genres.json");

int main()
{
    // Create GenericAPIs to use in the CROW_ROUTES
    GenericAPI<Genre>::resourceMap = genresMap;
    GenericAPI<Actor>::resourceMap = actorsMap;
    GenericAPI<Director>::resourceMap = directorsMap;
    GenericAPI<CompactDisc>::resourceMap = compactDiscsMap;

    // Setup the simple web service.
    SimpleApp app;

    // Define resources:

    // Genres
    CROW_ROUTE(app, "/api/genres").methods("POST"_method)(GenericAPI<Genre>::createResource);
    CROW_ROUTE(app, "/api/genres").methods("GET"_method)(GenericAPI<Genre>::readAllResources);
    CROW_ROUTE(app, "/api/genres/<string>").methods("GET"_method)(GenericAPI<Genre>::readResource);
    CROW_ROUTE(app, "/api/genres/<string>").methods("PUT"_method)(GenericAPI<Genre>::updateResource);
    CROW_ROUTE(app, "/api/genres/<string>").methods("DELETE"_method)(GenericAPI<Genre>::deleteResource);

    // Actor
    CROW_ROUTE(app, "/api/actors").methods("POST"_method)(GenericAPI<Actor>::createResource);
    CROW_ROUTE(app, "/api/actors").methods("GET"_method)(GenericAPI<Actor>::readAllResources);
    CROW_ROUTE(app, "/api/actors/<string>").methods("GET"_method)(GenericAPI<Actor>::readResource);
    CROW_ROUTE(app, "/api/actors/<string>").methods("PUT"_method)(GenericAPI<Actor>::updateResource);
    CROW_ROUTE(app, "/api/actors/<string>").methods("DELETE"_method)(GenericAPI<Actor>::deleteResource);

    // Directors
    CROW_ROUTE(app, "/api/directors").methods("POST"_method)(GenericAPI<Director>::createResource);
    CROW_ROUTE(app, "/api/directors").methods("GET"_method)(GenericAPI<Director>::readAllResources);
    CROW_ROUTE(app, "/api/directors/<string>").methods("GET"_method)(GenericAPI<Director>::readResource);
    CROW_ROUTE(app, "/api/directors/<string>").methods("PUT"_method)(GenericAPI<Director>::updateResource);
    CROW_ROUTE(app, "/api/directors/<string>").methods("DELETE"_method)(GenericAPI<Director>::deleteResource);

    // JellenReview
    CROW_ROUTE(app, "/api/jellenreviews").methods("GET"_method)(GenericAPI<JellenReview>::readAllResources);
    CROW_ROUTE(app, "/api/jellenreviews/<string>").methods("GET"_method)(GenericAPI<JellenReview>::readResource);

    // Cart
    CROW_ROUTE(app, "/api/carts").methods("POST"_method)(GenericAPI<Cart>::createResource);
    CROW_ROUTE(app, "/api/carts").methods("GET"_method)(GenericAPI<Cart>::readAllResources);
    CROW_ROUTE(app, "/api/carts/<string>").methods("GET"_method)(GenericAPI<Cart>::readResource);
    CROW_ROUTE(app, "/api/carts/<string>").methods("PUT"_method)(GenericAPI<Cart>::updateResource);
    CROW_ROUTE(app, "/api/carts/<string>").methods("DELETE"_method)(GenericAPI<Cart>::deleteResource);

    // Run the web service app.
    app.port(18080).run();

    // After the web service stops running:

    // Perform persistence of resources
    saveToFile<Genre>(GenericAPI<Genre>::resourceMap, "genres.json");
    saveToFile<Actor>(GenericAPI<Actor>::resourceMap, "actors.json");
    saveToFile<Director>(GenericAPI<Director>::resourceMap, "directors.json");
    saveToFile<JellenReview>(GenericAPI<JellenReview>::resourceMap, "jellenReviews.json");
    saveToFile<Cart>(GenericAPI<Cart>::resourceMap, "cart.json");
}